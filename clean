#!/usr/bin/env python3

import sys, argparse

from Bio import SeqIO
from Bio.Seq import Seq

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description="clean: filter and order assembly from list of contigs")

    parser.add_argument('-a', '--assembly', help="filename of assembly in FASTA format", type=str, required=True)
    parser.add_argument('-c', '--contiglist', help="filename of list of contigs to keep, one on each line", type=str, required=True)
    parser.add_argument('-o', '--output', help="filename of output contigs, default filtered_assembly.fasta", type=str, default="filtered_assembly.fasta")

    args = parser.parse_args()

    assembly = SeqIO.to_dict(SeqIO.parse(args.assembly, "fasta"))
    print(f"Loaded {len(assembly)} contigs from original assembly {args.assembly}", file=sys.stderr)

    contigs = []
    with open(args.contiglist, 'r') as contigfile:
        for contig in contigfile:
            contigs.append(contig.rstrip())
    print(f"Loaded list {len(contigs)} contigs to retain from {args.contiglist}", file=sys.stderr)

    with open(args.output, 'w') as output:
        contigs_written = 0
        for contig in contigs:
            SeqIO.write(assembly[contig], output, "fasta")
            contigs_written += 1
    print(f"Wrote {contigs_written} contigs to {args.output}", file=sys.stderr)

    print("Done", file=sys.stderr)
